NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(5)
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Patient.Name)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, andy$Weight]
andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
subset(andy$Weight, andy$Day=30)
subset(andy$Weight, andy$Day==30)
objects()
andy_end<-subset(andy$Weight, andy$Day==30)
andy_start<-subset(andy$Weight, andy$Day==1)
andy_loss<=andy_end-andy_start
andy_loss<-andy_end-andy_start
andy_loss
files<-list.files("diet_data")
files
files<-list.files("diet_data", full.names = TRUE)
files
andy_david<-rbind(andy, read.csv(files[2]))
head(andy_david)
tail(andy_david)
day_25<-andy_david[which((andy_david$Day==25))]
day_25<-andy_david[which(andy_david$Day==25)]
day_25<-andy_david[which(andy_david$Day==25),]
for(i in 1:5){print(i)}
for(i in 1:5)
{ dat <- rbind(dat)}
dat<-data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files[i]))
}
str(dat)
summary(dat)
median(dat$Weight)
median(dat$Weight, na.rm = TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30),]
data_30
dat_30
median(dat_30$Weight)
source("diet.R")
weightmedian(directory = "diet_data", day=20)
weightmedian(directory = "diet_data", 4)
weightmedian(directory = "diet_data", 20)
summary(files)
files_full<-list.files("diet_data", full.names = TRUE)
summary(files_full)
tmp <- vector(mode = "list", length = length(files_full))
str(tmp)
for (i in seq_along(files_full)) {
tmp[[i]] <- read.csv(files_full[[i]])
}
str(tmp)
str(lapply(files_full, read.csv))
str(tmp[[1]])
head(tmp[[1]][,"Day"])
output <- do.call(rbind, tmp)
str(output)
list.files("specdata")
f_286<-read.csv("specdata/286.csv")
f_286
str(f_286)
mean(f_286$sulfate)
?mean
mean(f_286$sulfate, na.rm=TRUE)
mean(f_286$nitrate, na.rm=TRUE)
f_286["sulphate"]
f_286["sulfate"]
mean(f_286["nitrate"], na.rm=TRUE)
f_286[which(f_286[,"nitrate"])]
mean(f_286[which(f_286[,"nitrate"])], na.rm = TRUE)
mean(f_286[which(f_286[,"nitrate"])], na.rm = TRUE)
?subset
subset(f_286, select=sulfate)
m<-subset(f_286, select=sulfate)
m
m["sulfate"]
m$sulfate
mean(m$sulfate, na.rm = TRUE)
mean(m[,"sulfate"], na.rm = TRUE)
mean(m["sulfate"], na.rm = TRUE)
mean(m[,"sulfate"], na.rm = TRUE)
filen<-paste("1", ".csv")
filen
filen<-paste("001", ".csv")
f_001<-read.csv(filen)
?paste
filen<-paste("specdata", "/", "001", ".csv")
filen
filen<-paste("specdata", "/", "001", ".csv", sep = "")
filen
f_001<-read.csv(filen)
as.character(1)
?as.character
as.character(1)
format("1", digits = 3)
format("1", scientific=TRUE)
format("1", width = 3)
format("1", width = 3, justify = "right")
format(1, width = 3, justify = "right")
sprintf("%05s", "1")
sprintf("%03s", "1")
g<-sprintf("%03s", "1")
g
g<-sprintf("%03s", "100")
g
formatC("1", width=3, flag = "0")
?formatC
formatC("1", width=3)
formatC("1", width=3, flag = "-")
formatC("1", width=3, flag = "0")
formatC("1", width=3, flag = "o")
formatC("1", width=3, flag = "0")
id<-1
filen<-paste("specdata", "/", sprintf("%03s", id), ".csv", sep = "")
filen
id<-286
filen<-paste("specdata", "/", sprintf("%03s", id), ".csv", sep = "")
filen
source("pollutantmean.R")
pollutantsinglemean(pollutant = "sulfate", id=1)
pollutantsinglemean(pollutant = "sulfate", id=286)
print("Reading file..." + filen)
print(paste("Reading file...", filen))
pollutantsinglemean(pollutant = "sulfate", id=1)
pollutantsinglemean(pollutant = "sulfate", id=286)
source("pollutantmean.R")
pollutantsinglemean(pollutant = "sulfate", id=286)
pollutantsinglemean(pollutant = "sulfate", id=1)
pollutantsinglemean(pollutant = "nitrate", id=1)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", pollutant = "nitrate", id=1)
pollutantmean("specdata", pollutant = "sulfate", id=1)
pollutantsinglemean(pollutant = "nitrate", id=1)
pollutantsinglemean(pollutant = "sulfate", id=1)
pollutantmean("specdata", pollutant = "sulfate", id=1:20)
pollutantmean("specdata", pollutant = "sulfate", id=1:10)
pollutantmean("specdata", pollutant = "sulfate", id=70:72)
pollutantmean("specdata", pollutant = "nitrate", id=70:72)
pollutantmean("specdata", pollutant = "nitrate", id=23)
?lapply
files_full<-c("001.csv","286.csv", "002.csv")
files_full<-c("specdata/001.csv","specdata/286.csv", "specdata/002.csv")
lapply(files_full, read.csv)
str(lapply(files_full, read.csv))
tmp<-lapply(files_full, read.csv)
output<-do.call(rbind, tmp)
str(output)
id<-1:10
is
id
dat <- data.frame()
for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
dat <- rbind(dat, filen)
}
dat
lst<-list()
dat<-list()
dat<-list(10)
dat
dat[1]=1
dat
id
dat<-list(length(id))
dat
for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
#dat <- rbind(dat, filen)
dat[i] = filen
}
dat
tmp<-lapply(dat, read.csv)
tmp
str(tmp)
fdat<-do.call(rbind, tmp)
mean(fdat[,pollutant], na.rm = TRUE)
pollutant<-"sulfate"
mean(fdat[,pollutant], na.rm = TRUE)
source("pollutantmean.R")
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=70:72)
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=1:10)
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=70:72)
pollutantmeanwithlapply("specdata", pollutant = "nitrate", id=70:72)
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=70:72)
id
id<-70:72
id
list(length(id))
dat <- list(length(id))
?list
id[1]
id[2]
dat <- list(length(id))
for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
dat[i] = filen
}
?append
dat
append(dat, "specdata")
dat <- list(length(id))
for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
#dat[i] = filen
dat<-append(dat, filen)
}
dat
dat <- list()
for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
#dat[i] = filen
dat<-append(dat, filen)
}
dat
tmp<-lapply(dat, read.csv)
fdat<-do.call(rbind, tmp)
mean(fdat[,pollutant], na.rm = TRUE)
pollutant
pollutant<-nitrate
pollutant<-"nitrate"
mean(fdat[,pollutant], na.rm = TRUE)
source("pollutantmean.R")
pollutantmeanwithlapply("specdata", pollutant = "nitrate", id=70:72)
source("pollutantmean.R")
pollutantmeanwithlapply("specdata", pollutant = "nitrate", id=70:72)
pollutantmeanwithlapply("specdata", pollutant = "nitrate", id=23)
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=1:10)
cTemp<-read.csv("specdata/001.csv")
?subset
subset(cTemp$ID, !is.na(cTemp$sulfate) & !is.na(cTemp$nitrate))
j<-subset(cTemp$ID, !is.na(cTemp$sulfate) & !is.na(cTemp$nitrate))
str(j)
summary(j)
str(cTemp)
length(j)
?data.frame
adf<-data.frame(1, length(j$ID))
j$ID
j
length(j)
adf<-data.frame(1, length(j))
adf
names(adf) <- c("id", "nobs")
adf
anf<-data.frame(id=1, nobs=length(j))
anf
source("complete.R")
completesingle(1)
completesingle("specdata", 1)
n<-completesingle("specdata", 1)
n
n<-completesingle("specdata", 2)
n
source("complete.R")
n<-completesingle("specdata", 3)
n
source("complete.R")
n<-completesingle("specdata", 2)
n
n<-completesingle("specdata", 12)
n
dat1<-data.frame(id=0,nobs=0)
dat1
dat<-data.frame(id=0,nobs=0)
id<-c(2,4,8,10,12)
source("complete.R")
for(i in id)
{
n<-completesingle(directory, i)
dat <- rbind(dat, n)
}
directory="specdata"
for(i in id)
{
n<-completesingle(directory, i)
dat <- rbind(dat, n)
}
dat
source("complete.R")
complete("specdata", id)
source("complete.R")
complete("specdata", id)
complete("specdata", 1)
source("complete.R")
complete("specdata", 30:25)
complete("specdata", 3)
?corr
?cor
cor(1:10, 2:11)
?rnorm
rn<-rnorm(1:24)
rn
24*60
rn<-rnorm(1:1440)
rn
?apply
x<-matrix(rnorm(200), 20,10)
apply(x, 2, mean)
apply(x,1,sum)
x
apply(x, 1, function(y) y*4)
apply(x, 1, function(y) y/4)
apply(x, 1, function(y) y[,1]/4)
apply(x, 1, function(y) y[,10]/4)
apply(x, 1, function(y) y[,]/4)
apply(x, 1, function(y) y[]/4)
apply(x, 1, function(y) {y[]/4})
apply(x, 1, function(y) {length(y) y[]/4})
apply(x, 1, function(y) { y[]/4})
apply(x, 1, function(y) { y[,20]/4})
?gl
mean(x)
mean(z)
mean(m)
traceback()
2
lm(m-x)
traceback()
lm(m~x)
traceback()
debug(lm)
lm(y~x)
options(error=recover)
read.csv("noshuchfile.csv")
2
library(datasets)
data(iris)
str(iris)
?iris
x<-data(iris)
head(x)
x
iris
f<-factor(iris$Species)
f
levels(f)
iris_factors<-levels(f)
tapply(iris$Sepal.Length, iris_factors, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
round(6.588)
colMeans(iris)
?Error
?options
options(error=NULL)
rowMeans(iris[1:4])
apply(iris, 2, mean)
apply(iris, 1, mean)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
?apply
data(mtcars)
?mtcars
str(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
mpgbycyl<-with(mtcars, tapply(mpg, cyl, mean))
mpgbycyl
mpgbycyl[[4]]
mpgbycyl[[1]]
mpgbycyl[[3]]
mpgbycyl$4
mpgbycyl[1]
mpgbycyl[[3]]-mpgbycl[[1]]
mpgbycyl[[3]]-mpgbycyl[[1]]
debug(ls)
ls
ls
sapply(split(mtcars$mpg, mtcars$cyl), mean)
27-15
mpgbycyl[[3]]-mpgbycyl[[1]]
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$hp, mtcars$cyl, mean)
source("cachemean.R")
x<-1:1000
cachemean(x)
x<-makeVector(x)
x$getmean()
cachemean(x)
x
x<-makeVector(x)
x
testList<-list(1:100)
testList
temp<-cacheVector(testList)
temp<-makeVector(testList)
cachemean(temp)
testList<-vector(1:100)
testList<-numeric(1:100)
testList<-numeric()
testList = 1:100
testList
temp<-makeVector(testList)
cachemean(temp)
cachemean(temp)
mat<-matrix(seq(1:6), 2)
mat
mat<-matrix(seq(1:6), 3)
mat
dim(mat)
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
testmatrixinv(mat1)
source("cacheMatrixInverse.R")
source("cacheMatrixInverse.R")
testmatrixinv(mat1)
source("cacheMatrixInverse.R")
testmatrixinv(mat1)
source("cacheMatrixInverse.R")
testmatrixinv(mat1)
source("cacheMatrixInverse.R")
matrixinversetest()
source("cacheMatrixInverse.R")
matrixinversetest()
source("cacheMatrixInverse.R")
matrixinversetest()
source("cacheMatrixInverse.R")
matrixinversetest()
?matrix
source("cacheMatrix.R")
pwd()
getpwd()
ls()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
set.seed(1010301)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
testmatrixinv(mat1)
mat1[2,3]
mat1[2,3]=0.1
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
mat1 = matrix(r, nrow=1000, ncol=1000)
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
dim(m)
dim(mat)
dim(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
mt<-testmatrixinv(mat1)
t$get
t$getinv
t$get()
t$getinv()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
?identical
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
matrixinversetest()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
matrixinversetest()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
matrixinversetest()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
matrixinversetest()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
