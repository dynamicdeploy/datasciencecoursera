for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
#dat <- rbind(dat, filen)
dat[i] = filen
}
dat
tmp<-lapply(dat, read.csv)
tmp
str(tmp)
fdat<-do.call(rbind, tmp)
mean(fdat[,pollutant], na.rm = TRUE)
pollutant<-"sulfate"
mean(fdat[,pollutant], na.rm = TRUE)
source("pollutantmean.R")
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=70:72)
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=1:10)
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=70:72)
pollutantmeanwithlapply("specdata", pollutant = "nitrate", id=70:72)
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=70:72)
id
id<-70:72
id
list(length(id))
dat <- list(length(id))
?list
id[1]
id[2]
dat <- list(length(id))
for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
dat[i] = filen
}
?append
dat
append(dat, "specdata")
dat <- list(length(id))
for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
#dat[i] = filen
dat<-append(dat, filen)
}
dat
dat <- list()
for(i in id)
{
filen<-paste("specdata", "/", sprintf("%03s", i), ".csv", sep = "")
#dat[i] = filen
dat<-append(dat, filen)
}
dat
tmp<-lapply(dat, read.csv)
fdat<-do.call(rbind, tmp)
mean(fdat[,pollutant], na.rm = TRUE)
pollutant
pollutant<-nitrate
pollutant<-"nitrate"
mean(fdat[,pollutant], na.rm = TRUE)
source("pollutantmean.R")
pollutantmeanwithlapply("specdata", pollutant = "nitrate", id=70:72)
source("pollutantmean.R")
pollutantmeanwithlapply("specdata", pollutant = "nitrate", id=70:72)
pollutantmeanwithlapply("specdata", pollutant = "nitrate", id=23)
pollutantmeanwithlapply("specdata", pollutant = "sulfate", id=1:10)
cTemp<-read.csv("specdata/001.csv")
?subset
subset(cTemp$ID, !is.na(cTemp$sulfate) & !is.na(cTemp$nitrate))
j<-subset(cTemp$ID, !is.na(cTemp$sulfate) & !is.na(cTemp$nitrate))
str(j)
summary(j)
str(cTemp)
length(j)
?data.frame
adf<-data.frame(1, length(j$ID))
j$ID
j
length(j)
adf<-data.frame(1, length(j))
adf
names(adf) <- c("id", "nobs")
adf
anf<-data.frame(id=1, nobs=length(j))
anf
source("complete.R")
completesingle(1)
completesingle("specdata", 1)
n<-completesingle("specdata", 1)
n
n<-completesingle("specdata", 2)
n
source("complete.R")
n<-completesingle("specdata", 3)
n
source("complete.R")
n<-completesingle("specdata", 2)
n
n<-completesingle("specdata", 12)
n
dat1<-data.frame(id=0,nobs=0)
dat1
dat<-data.frame(id=0,nobs=0)
id<-c(2,4,8,10,12)
source("complete.R")
for(i in id)
{
n<-completesingle(directory, i)
dat <- rbind(dat, n)
}
directory="specdata"
for(i in id)
{
n<-completesingle(directory, i)
dat <- rbind(dat, n)
}
dat
source("complete.R")
complete("specdata", id)
source("complete.R")
complete("specdata", id)
complete("specdata", 1)
source("complete.R")
complete("specdata", 30:25)
complete("specdata", 3)
?corr
?cor
cor(1:10, 2:11)
?rnorm
rn<-rnorm(1:24)
rn
24*60
rn<-rnorm(1:1440)
rn
?apply
x<-matrix(rnorm(200), 20,10)
apply(x, 2, mean)
apply(x,1,sum)
x
apply(x, 1, function(y) y*4)
apply(x, 1, function(y) y/4)
apply(x, 1, function(y) y[,1]/4)
apply(x, 1, function(y) y[,10]/4)
apply(x, 1, function(y) y[,]/4)
apply(x, 1, function(y) y[]/4)
apply(x, 1, function(y) {y[]/4})
apply(x, 1, function(y) {length(y) y[]/4})
apply(x, 1, function(y) { y[]/4})
apply(x, 1, function(y) { y[,20]/4})
?gl
mean(x)
mean(z)
mean(m)
traceback()
2
lm(m-x)
traceback()
lm(m~x)
traceback()
debug(lm)
lm(y~x)
options(error=recover)
read.csv("noshuchfile.csv")
2
library(datasets)
data(iris)
str(iris)
?iris
x<-data(iris)
head(x)
x
iris
f<-factor(iris$Species)
f
levels(f)
iris_factors<-levels(f)
tapply(iris$Sepal.Length, iris_factors, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
round(6.588)
colMeans(iris)
?Error
?options
options(error=NULL)
rowMeans(iris[1:4])
apply(iris, 2, mean)
apply(iris, 1, mean)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
?apply
data(mtcars)
?mtcars
str(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
mpgbycyl<-with(mtcars, tapply(mpg, cyl, mean))
mpgbycyl
mpgbycyl[[4]]
mpgbycyl[[1]]
mpgbycyl[[3]]
mpgbycyl$4
mpgbycyl[1]
mpgbycyl[[3]]-mpgbycl[[1]]
mpgbycyl[[3]]-mpgbycyl[[1]]
debug(ls)
ls
ls
sapply(split(mtcars$mpg, mtcars$cyl), mean)
27-15
mpgbycyl[[3]]-mpgbycyl[[1]]
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$hp, mtcars$cyl, mean)
source("cachemean.R")
x<-1:1000
cachemean(x)
x<-makeVector(x)
x$getmean()
cachemean(x)
x
x<-makeVector(x)
x
testList<-list(1:100)
testList
temp<-cacheVector(testList)
temp<-makeVector(testList)
cachemean(temp)
testList<-vector(1:100)
testList<-numeric(1:100)
testList<-numeric()
testList = 1:100
testList
temp<-makeVector(testList)
cachemean(temp)
cachemean(temp)
mat<-matrix(seq(1:6), 2)
mat
mat<-matrix(seq(1:6), 3)
mat
dim(mat)
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
testmatrixinv(mat1)
source("cacheMatrixInverse.R")
source("cacheMatrixInverse.R")
testmatrixinv(mat1)
source("cacheMatrixInverse.R")
testmatrixinv(mat1)
source("cacheMatrixInverse.R")
testmatrixinv(mat1)
source("cacheMatrixInverse.R")
matrixinversetest()
source("cacheMatrixInverse.R")
matrixinversetest()
source("cacheMatrixInverse.R")
matrixinversetest()
source("cacheMatrixInverse.R")
matrixinversetest()
?matrix
source("cacheMatrix.R")
pwd()
getpwd()
ls()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
set.seed(1010301)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
testmatrixinv(mat1)
mat1[2,3]
mat1[2,3]=0.1
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
mat1 = matrix(r, nrow=1000, ncol=1000)
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
dim(m)
dim(mat)
dim(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
mt<-testmatrixinv(mat1)
t$get
t$getinv
t$get()
t$getinv()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
?identical
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
testmatrixinv(mat1)
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
matrixinversetest()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
matrixinversetest()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
matrixinversetest()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
matrixinversetest()
source("~/Documents/ProgrammingAssignment2/cacheMatrix.R")
str(str)
x<-rnorm(1000)
str(x)
?rpois
?qnorm
plot(x)
?rpois
system.time()
system.time(300^6457)
system.time(300*6457)
set.seed(1)
rpois(5, 2)
?ppois
set.seed(10)
x <- rep(0:1, each = 5)
x
e <- rnorm(10, 0, 20)
e
y <- 0.5 + 2 * x + e
y
?rbinom
getpwd()
ls()
pwd()
ls()
list.files()
?read.csv
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
str(outcome)
head(outcome)
ncol(outcome)
names(outcome)
outcome[,11] = as.numeric(outcome[,11])
hist(outcome[,11])
head(outcome[,11])
outcome_subset = subset(outcome, !is.na(outcome$Hospital.Name) && !is.na(outcome$State))
head(outcome_subset)
str(outcome_subset)
nrows(outcome_subset)
length(outcome_subset$Hospital.Name)
class(outcome_subset)
nrow(outcome_subset)
names(outcome)
head(outcome)
colnames(outcome)[11] <- "heart attack"
colnames(outcome)
?order
colnames(outcome_subset)[11] <- "heart attack"
colnames(outcome_subset)
outcome_sort_ha<-outcome_subset[order(outcome_subset$`heart attack`, decreasing = TRUE)]
outcome_sort_ha<-order(outcome_subset$`heart attack`, decreasing = TRUE)
head(outcome_sort_ha)
ncol(outcome_subset$`heart attack`)
length(outcome_subset$`heart attack`)
outcome_subset[,11]<-as.numeric(outcome_subset[,11])
length(outcome_subset$`heart attack`)
outcome_sort_ha<-order(outcome_subset$`heart attack`, decreasing = TRUE)
length(outcome_sort_ha)
head(outcome_sort_ha)
tail(outcome_sort_ha)
outcome_sort_ha<-order(outcome_subset$`heart attack`)
tail(outcome_sort_ha)
head(outcome_sort_ha)
order(outcome_subset$`heart attack`)
mean(outcome_subset$`heart attack`)
class(outcome_subset$`heart attack`)
outcome_sort_ha
outcome_sort_ha<-order(outcome_subset$`heart attack`)
sort.list(outcome_sort_ha)
sort.list(outcome_sort_ha, na.last = NA)
abc<-rnorm(1:200, 45, 2)
abc
sort.list(abc)
class(abc)
sort.int(abc)
sort.int(outcome_sort_ha)
outcome_subset[order(outcome_subset$`heart attack`)]
index<-with(outcome_subset, order(outcome_subset$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
outcome_subset[index,]
xyz<-outcome_subset[index,]
xyz$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
index<-with(outcome_subset, order(outcome_subset$`heart attack`))
xyz<-outcome_subset[index,]
xyz$`heart attack`
index<-with(outcome_subset, order(outcome_subset$`heart attack`))
lmn<-outcome_subset[index,]
head(lmn$`heart attack`)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome[, 11] <- as.numeric(outcome[, 11])
head(outcome[,11])
index<-with(outcome, order(outcome$`heart attack`, na.last = TRUE))
index<-with(outcome, order(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.last = TRUE))
head(outcome[,11])
lmn<-outcome[index]
lmn<-outcome[index,]
head(lmn)
head(lmn$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
lmn$State[1]
subset(lmn$Hospital.Name, lmn$State="TX")
subset(lmn$Hospital.Name, lmn$State=="TX")
subset(lmn$Hospital.Name, lmn$State=="TX")[1]
subset(lmn$Hospital.Name, lmn$State=="CA")[1]
lmn[lmn$State=="CA"][1]
lmn[lmn$State=="CA"]
lmn[lmn$State=="CA"]
lmn[lmn$State=="CA",][1]
lmn[lmn$State=="CA",][1]
lmn[lmn$State=="CA",]
class(lmn)
head(lmn)
factor(lmn$State)
factor(lmn$State)$Levels
levels(lmn$State)
levels(factor(lmn$State))
states<-levels(factor(lmn$State))
"CA" %in% states
"QA" %in% states
index<-with(outcome, order(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, outcome$Hospital.Name, na.last = TRUE))
lmn<-outcome[index,]
subset(lmn$Hospital.Name, lmn$State=="TX")[1]
subset(lmn$Hospital.Name, lmn$State=="CA")[1]
?stop
convert.magic <- function(obj,types){
for (i in 1:length(obj)){
FUN <- switch(types[i],character = as.character,
numeric = as.numeric,
factor = as.factor)
obj[,i] <- FUN(obj[,i])
}
obj
}
ncol(lmn)
names(lmn)
?switch
?factor
states<-levels(factor(outcome$State), exclude=NA)
states<-levels(factor(outcome$State))
states
class(vals)
vals<-subset(lmn$Hospital.Name, lmn$State=="TX")
class(vals)
outcome_ha<-subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
)
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
?min
min(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.rm=TRUE)
minh<-min(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.rm=TRUE)
index<-with(outcome, order(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.last = TRUE))
index<-with(outcome, order(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, outcome$Hospital.Name, na.last = TRUE))
lmn<-outcome[index,]
outcomev <- subset(outcomev, !is.na(outcomev$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
outcomev <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomev[, 11] <- as.numeric(outcomev[, 11])
outcomev[, 17] <- as.numeric(outcomev[, 17])
outcomev[, 23] <- as.numeric(outcomev[, 23])
outcomev <- subset(outcomev, !is.na(outcomev$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
index<-with(outcomev, order(outcomev$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, outcomev$Hospital.Name, na.last = TRUE))
lmn<-outcomev[index,]
state<-"TX"
vals<-subset(lmn, lmn$State==state)
minval<-min(vals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.rm=TRUE)
lowhosps<-subset(vals$Hospital.Name, vals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == minval)
?stop
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source("best.R")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source("best.R")
best("NY", "hert attack")
source("best.R")
best("NY", "hert attack")
source("best.R")
best("NY", "hert attack")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
